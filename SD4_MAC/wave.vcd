$date
	Tue Dec 14 00:12:45 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 16 ! aligned_pp_1 [15:0] $end
$var wire 16 " aligned_pp_2 [15:0] $end
$var wire 16 # aligned_pp_3 [15:0] $end
$var wire 16 $ aligned_pp_4 [15:0] $end
$var wire 16 % aligned_pp_5 [15:0] $end
$var wire 16 & aligned_pp_6 [15:0] $end
$var wire 16 ' aligned_pp_7 [15:0] $end
$var wire 16 ( aligned_pp_8 [15:0] $end
$var wire 5 ) exp_0 [4:0] $end
$var wire 5 * exp_1 [4:0] $end
$var wire 5 + exp_2 [4:0] $end
$var wire 5 , exp_3 [4:0] $end
$var wire 5 - exp_4 [4:0] $end
$var wire 5 . exp_5 [4:0] $end
$var wire 5 / exp_6 [4:0] $end
$var wire 5 0 exp_7 [4:0] $end
$var wire 5 1 exp_8 [4:0] $end
$var wire 5 2 pp_0 [4:0] $end
$var wire 5 3 pp_1 [4:0] $end
$var wire 5 4 pp_2 [4:0] $end
$var wire 5 5 pp_3 [4:0] $end
$var wire 5 6 pp_4 [4:0] $end
$var wire 5 7 pp_5 [4:0] $end
$var wire 5 8 pp_6 [4:0] $end
$var wire 5 9 pp_7 [4:0] $end
$var wire 5 : pp_8 [4:0] $end
$var wire 45 ; signed_pp_all [44:0] $end
$var wire 144 < aligned_pp_all [143:0] $end
$var wire 16 = aligned_pp_0 [15:0] $end
$var reg 1 > clk $end
$var reg 5 ? exp_0_out [4:0] $end
$var reg 5 @ exp_max_out [4:0] $end
$var reg 5 A pp_0_out [4:0] $end
$var reg 5 B signed_5_bit [4:0] $end
$scope module align0 $end
$var wire 5 C exp [4:0] $end
$var wire 5 D exp_max [4:0] $end
$var wire 5 E signed_pp [4:0] $end
$var reg 16 F aligned_pp [15:0] $end
$var reg 5 G exp_diff [4:0] $end
$var reg 15 H pp_shifted [14:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx H
bx G
bx F
bx E
bx D
bx C
b0 B
bx A
bx @
bx ?
x>
bx =
bxzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz <
bz ;
bz :
bz 9
bz 8
bz 7
bz 6
bz 5
bz 4
bz 3
bz 2
bz 1
bz 0
bz /
bz .
bz -
bz ,
bz +
bz *
bz )
bz (
bz '
bz &
bz %
bz $
bz #
bz "
bz !
$end
#3
b1111 B
#7
b11111 B
#10
b1 B
#111
